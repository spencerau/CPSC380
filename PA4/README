# CPU Scheduler

+ Simulates a CPU scheduler by utilizing 4 scheduling algorithms, first come first serve,
+ shortest job first, round robin, and priority scheduling.

+ Uses std::queue for FCFS and RR, with the Quantum being set to 10

+ Uses std::priority_queue with overloaded Comparator comparing burst time and priority
+ for SJF and Priority respectively

## Identifying Information

* Name: Spencer Au
* Student ID: 2385256
* Email: spau@chapman.edu
* Course: CPSC 380
* Assignment: PA4 - CPU Scheduler

## Source Files

* CPU.h and CPU.c
* list.h and list.c
* schedulers.h
* task.h
* driver.c
* schedule_fcfs.cpp
* schedule_sjf.cpp
* schedule_rr.cpp
* schedule_priority.cpp

## References

* https://en.cppreference.com/w/cpp/container/priority_queue
* https://www.geeksforgeeks.org/queue-cpp-stl/
* https://www.geeksforgeeks.org/priority-queue-set-1-introduction/
* https://stackoverflow.com/questions/16111337/declaring-a-priority-queue-in-c-with-a-custom-comparator
* https://en.wikipedia.org/wiki/C_POSIX_library

* Ammar Askar - #include issues
* Kevin Nagar - use CPP

## Known Errors

*

## Build Insructions

* make fcfs
* make sjf
* make priority
* make rr

* To Remove .o Files: 
* make clean

## Execution Instructions

* For First Come, First Serve:
* ./fcfs "filename"

* For Shortest Job First:
* ./sjf "filename"

* For Priority:
* ./priority "filename"

* For Round Robin:
* ./rr "filename"
